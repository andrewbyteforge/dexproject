# Generated by Django 5.2.6 on 2025-09-25 11:43

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaperTradingAccount',
            fields=[
                ('account_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Account name (e.g., 'Conservative Strategy', 'High Risk')", max_length=100)),
                ('initial_balance_usd', models.DecimalField(decimal_places=2, default=Decimal('10000.00'), help_text='Starting virtual USD balance', max_digits=20)),
                ('current_balance_usd', models.DecimalField(decimal_places=2, default=Decimal('10000.00'), max_digits=20)),
                ('eth_balance', models.DecimalField(decimal_places=18, default=Decimal('1.0'), help_text='Virtual ETH for gas fees', max_digits=20)),
                ('total_trades', models.IntegerField(default=0)),
                ('successful_trades', models.IntegerField(default=0)),
                ('failed_trades', models.IntegerField(default=0)),
                ('total_pnl_usd', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('total_fees_paid_usd', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reset_count', models.IntegerField(default=0, help_text='Number of times account has been reset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paper_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'paper_trading_accounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaperTrade',
            fields=[
                ('trade_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trade_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('swap', 'Swap')], max_length=10)),
                ('token_in_address', models.CharField(max_length=42)),
                ('token_in_symbol', models.CharField(max_length=20)),
                ('token_out_address', models.CharField(max_length=42)),
                ('token_out_symbol', models.CharField(max_length=20)),
                ('amount_in', models.DecimalField(decimal_places=18, help_text='Amount in (wei)', max_digits=36)),
                ('amount_in_usd', models.DecimalField(decimal_places=2, max_digits=20)),
                ('expected_amount_out', models.DecimalField(decimal_places=18, max_digits=36)),
                ('actual_amount_out', models.DecimalField(blank=True, decimal_places=18, max_digits=36, null=True)),
                ('simulated_gas_price_gwei', models.DecimalField(decimal_places=2, max_digits=10)),
                ('simulated_gas_used', models.IntegerField()),
                ('simulated_gas_cost_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('simulated_slippage_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_time_ms', models.IntegerField(blank=True, help_text='Simulated execution time in milliseconds', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('executing', 'Executing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('mock_tx_hash', models.CharField(blank=True, help_text='Simulated transaction hash', max_length=66)),
                ('mock_block_number', models.IntegerField(blank=True, null=True)),
                ('strategy_name', models.CharField(blank=True, help_text='Trading strategy used', max_length=100)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='paper_trading.papertradingaccount')),
            ],
            options={
                'db_table': 'paper_trades',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaperPosition',
            fields=[
                ('position_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token_address', models.CharField(max_length=42)),
                ('token_symbol', models.CharField(max_length=20)),
                ('quantity', models.DecimalField(decimal_places=18, max_digits=36)),
                ('average_entry_price_usd', models.DecimalField(decimal_places=6, max_digits=20)),
                ('current_price_usd', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('total_invested_usd', models.DecimalField(decimal_places=2, max_digits=20)),
                ('current_value_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('unrealized_pnl_usd', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('realized_pnl_usd', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('stop_loss_price', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('take_profit_price', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('is_open', models.BooleanField(default=True)),
                ('opened_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='paper_trading.papertradingaccount')),
            ],
            options={
                'db_table': 'paper_positions',
                'ordering': ['-opened_at'],
            },
        ),
        migrations.CreateModel(
            name='PaperTradingConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_slippage_percent', models.DecimalField(decimal_places=2, default=Decimal('0.5'), help_text='Base slippage percentage for all trades', max_digits=5)),
                ('gas_price_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.0'), help_text='Multiplier for gas price simulation', max_digits=5)),
                ('execution_delay_ms', models.IntegerField(default=500, help_text='Simulated execution delay in milliseconds')),
                ('max_position_size_percent', models.DecimalField(decimal_places=2, default=Decimal('10.0'), help_text='Max position size as % of portfolio', max_digits=5)),
                ('max_daily_trades', models.IntegerField(default=50, help_text='Maximum trades per day')),
                ('stop_loss_percent', models.DecimalField(decimal_places=2, default=Decimal('5.0'), help_text='Default stop loss percentage', max_digits=5)),
                ('simulate_network_issues', models.BooleanField(default=True, help_text='Simulate occasional network failures')),
                ('simulate_mev', models.BooleanField(default=True, help_text='Simulate MEV bot competition')),
                ('failure_rate_percent', models.DecimalField(decimal_places=2, default=Decimal('2.0'), help_text='Percentage of trades that should randomly fail', max_digits=5)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='paper_trading.papertradingaccount')),
            ],
            options={
                'db_table': 'paper_trading_configs',
            },
        ),
        migrations.AddIndex(
            model_name='papertradingaccount',
            index=models.Index(fields=['user', 'is_active'], name='paper_tradi_user_id_4c4334_idx'),
        ),
        migrations.AddIndex(
            model_name='papertradingaccount',
            index=models.Index(fields=['created_at'], name='paper_tradi_created_86fbd6_idx'),
        ),
        migrations.AddIndex(
            model_name='papertrade',
            index=models.Index(fields=['account', 'status'], name='paper_trade_account_22eae7_idx'),
        ),
        migrations.AddIndex(
            model_name='papertrade',
            index=models.Index(fields=['created_at'], name='paper_trade_created_bbc42f_idx'),
        ),
        migrations.AddIndex(
            model_name='papertrade',
            index=models.Index(fields=['trade_type'], name='paper_trade_trade_t_17c239_idx'),
        ),
        migrations.AddIndex(
            model_name='paperposition',
            index=models.Index(fields=['account', 'is_open'], name='paper_posit_account_ccd9b9_idx'),
        ),
        migrations.AddIndex(
            model_name='paperposition',
            index=models.Index(fields=['token_address'], name='paper_posit_token_a_b4c146_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='paperposition',
            unique_together={('account', 'token_address', 'is_open')},
        ),
    ]
