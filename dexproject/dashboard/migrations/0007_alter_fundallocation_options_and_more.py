# Generated by Django 5.2.6 on 2025-09-21 08:49

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0006_fundallocation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='fundallocation',
            options={'verbose_name': 'Fund Allocation', 'verbose_name_plural': 'Fund Allocations'},
        ),
        migrations.RemoveIndex(
            model_name='fundallocation',
            name='dashboard_f_allocat_d5c3a2_idx',
        ),
        migrations.RemoveIndex(
            model_name='fundallocation',
            name='dashboard_f_allocat_7a9b2c_idx',
        ),
        migrations.RemoveIndex(
            model_name='fundallocation',
            name='dashboard_f_created_8c9d1e_idx',
        ),
        migrations.RemoveIndex(
            model_name='fundallocation',
            name='dashboard_f_updated_f2a3b4_idx',
        ),
        migrations.RenameIndex(
            model_name='fundallocation',
            new_name='dashboard_f_user_id_fdef4c_idx',
            old_name='dashboard_f_user_id_e8f1b4_idx',
        ),
        migrations.RenameIndex(
            model_name='fundallocation',
            new_name='dashboard_f_is_acti_0b5310_idx',
            old_name='dashboard_f_is_acti_4d5e6f_idx',
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='daily_spent_today',
            field=models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='ETH spent today (resets daily)', max_digits=18),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='last_daily_reset',
            field=models.DateField(default=django.utils.timezone.now, help_text='Last date when daily spending was reset'),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='last_modified_by_user',
            field=models.DateTimeField(auto_now=True, help_text='When user last modified these settings'),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='notes',
            field=models.TextField(blank=True, help_text='User notes about allocation strategy'),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='risk_level',
            field=models.CharField(choices=[('CONSERVATIVE', 'Conservative'), ('MODERATE', 'Moderate'), ('AGGRESSIVE', 'Aggressive')], default='CONSERVATIVE', help_text='Calculated risk level based on allocation settings', max_length=15),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='settings_version',
            field=models.PositiveIntegerField(default=1, help_text='Version number for settings schema'),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='total_allocated_eth',
            field=models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Total ETH currently allocated for trading', max_digits=18),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='allocation_method',
            field=models.CharField(choices=[('PERCENTAGE', 'Percentage of Balance'), ('FIXED', 'Fixed Amount')], default='PERCENTAGE', help_text='Method for determining trading allocation', max_length=15),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='allocation_percentage',
            field=models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='Percentage of available balance to allocate (1-50%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('1.00')), django.core.validators.MaxValueValidator(Decimal('50.00'))]),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='auto_rebalance_enabled',
            field=models.BooleanField(default=True, help_text='Automatically rebalance allocation after successful trades'),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='daily_spending_limit',
            field=models.DecimalField(decimal_places=8, default=Decimal('1.00000000'), help_text='Maximum ETH that can be spent per day', max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('0.00100000'))]),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether allocation settings are currently active'),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='minimum_balance_reserve',
            field=models.DecimalField(decimal_places=8, default=Decimal('0.05000000'), help_text='Minimum ETH balance to always keep in wallet', max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('0.00100000'))]),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='stop_loss_enabled',
            field=models.BooleanField(default=True, help_text='Enable automatic stop-loss protection'),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='stop_loss_percentage',
            field=models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Stop loss percentage (1-25%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('1.00')), django.core.validators.MaxValueValidator(Decimal('25.00'))]),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='fundallocation',
            name='user',
            field=models.OneToOneField(help_text='User who owns this allocation setting', on_delete=django.db.models.deletion.CASCADE, related_name='fund_allocation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='fundallocation',
            index=models.Index(fields=['last_daily_reset'], name='dashboard_f_last_da_12df83_idx'),
        ),
        migrations.AlterModelTable(
            name='fundallocation',
            table='dashboard_fund_allocation',
        ),
    ]
